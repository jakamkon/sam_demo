# SAM FILE
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Create an REST API with lambda as backend.
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  ListLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.list_handler
      Runtime: python3.6
      CodeUri: src/
      Description: List all items in table.
      MemorySize: 128
      Timeout: 60 
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          REGION_NAME: !Ref AWS::Region
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /list
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table  
  PutLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.put_handler
      Runtime: python3.6
      CodeUri: src/
      Description: Put a random item into a table.
      MemorySize: 128
      Timeout: 60 
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          REGION_NAME: !Ref AWS::Region
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /put
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table  
  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub 'SAMTest-${AWS::StackName}'
      PrimaryKey:
        Name: mykey
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  APIGatewayDeploymentURL:
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiGatewayApi.Stage}/"

