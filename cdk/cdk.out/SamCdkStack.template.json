{
 "Resources": {
  "TableCD117FA1": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "mykey",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "mykey",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 2,
     "WriteCapacityUnits": 2
    },
    "TableName": "SAMTest-sam-cdk-app"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/Table/Resource"
   }
  },
  "ListLambdaServiceRole74F269DE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ListLambda/ServiceRole/Resource"
   }
  },
  "ListLambdaServiceRoleDefaultPolicyA4A01000": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TableCD117FA1",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListLambdaServiceRoleDefaultPolicyA4A01000",
    "Roles": [
     {
      "Ref": "ListLambdaServiceRole74F269DE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ListLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListLambda6A0688A4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0a7a0de8a4f9a92a7519f531c65d3754b6b4092a0e5e9806fd8af4ec463a628f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListLambdaServiceRole74F269DE",
      "Arn"
     ]
    },
    "Description": "List all items in table.",
    "Environment": {
     "Variables": {
      "ENDPOINT": "default",
      "TABLE_NAME": {
       "Ref": "TableCD117FA1"
      }
     }
    },
    "Handler": "lambda_function.list_handler",
    "MemorySize": 128,
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "ListLambdaServiceRoleDefaultPolicyA4A01000",
    "ListLambdaServiceRole74F269DE"
   ],
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ListLambda/Resource",
    "aws:asset:path": "asset.0a7a0de8a4f9a92a7519f531c65d3754b6b4092a0e5e9806fd8af4ec463a628f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ListLambdaCurrentVersion77D75341a68d1f4a40ea325bad3146dbb97353e2": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "ListLambda6A0688A4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ListLambda/CurrentVersion/Resource"
   }
  },
  "PutLambdaServiceRole497464C4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/PutLambda/ServiceRole/Resource"
   }
  },
  "PutLambdaServiceRoleDefaultPolicyCF049451": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TableCD117FA1",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PutLambdaServiceRoleDefaultPolicyCF049451",
    "Roles": [
     {
      "Ref": "PutLambdaServiceRole497464C4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/PutLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PutLambdaF8B9F63D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0a7a0de8a4f9a92a7519f531c65d3754b6b4092a0e5e9806fd8af4ec463a628f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PutLambdaServiceRole497464C4",
      "Arn"
     ]
    },
    "Description": "Put a random item into a table.",
    "Environment": {
     "Variables": {
      "ENDPOINT": "default",
      "TABLE_NAME": {
       "Ref": "TableCD117FA1"
      }
     }
    },
    "Handler": "lambda_function.put_handler",
    "MemorySize": 128,
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "PutLambdaServiceRoleDefaultPolicyCF049451",
    "PutLambdaServiceRole497464C4"
   ],
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/PutLambda/Resource",
    "aws:asset:path": "asset.0a7a0de8a4f9a92a7519f531c65d3754b6b4092a0e5e9806fd8af4ec463a628f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PutLambdaCurrentVersionA6F937A4b39e2ea07819d000f1a60ba628e1a25c": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "PutLambdaF8B9F63D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/PutLambda/CurrentVersion/Resource"
   }
  },
  "ListLambdaAliasCD126662": {
   "Type": "AWS::Lambda::Alias",
   "Properties": {
    "FunctionName": {
     "Ref": "ListLambda6A0688A4"
    },
    "FunctionVersion": {
     "Fn::GetAtt": [
      "ListLambdaCurrentVersion77D75341a68d1f4a40ea325bad3146dbb97353e2",
      "Version"
     ]
    },
    "Name": "live"
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ListLambdaAlias/Resource"
   }
  },
  "PutLambdaAliasEBF49F6B": {
   "Type": "AWS::Lambda::Alias",
   "Properties": {
    "FunctionName": {
     "Ref": "PutLambdaF8B9F63D"
    },
    "FunctionVersion": {
     "Fn::GetAtt": [
      "PutLambdaCurrentVersionA6F937A4b39e2ea07819d000f1a60ba628e1a25c",
      "Version"
     ]
    },
    "Name": "live"
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/PutLambdaAlias/Resource"
   }
  },
  "ApiGatewayApi487126F0": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "REST API with Lambda backend converted from SAM",
    "Name": "SAM CDK API"
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Resource"
   }
  },
  "ApiGatewayApiCloudWatchRole3D0BA780": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/CloudWatchRole/Resource"
   }
  },
  "ApiGatewayApiAccountC25230A9": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ApiGatewayApiCloudWatchRole3D0BA780",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ApiGatewayApi487126F0"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Account"
   }
  },
  "ApiGatewayApiDeployment0C47D32C1faa29dbf1da95e78e448701f2a16e6e": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    },
    "Description": "REST API with Lambda backend converted from SAM"
   },
   "DependsOn": [
    "ApiGatewayApilistGETC9298EF7",
    "ApiGatewayApilist506D78CA",
    "ApiGatewayApiputPOSTEF04C65C",
    "ApiGatewayApiputCA05796D"
   ],
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Deployment/Resource"
   }
  },
  "ApiGatewayApiDeploymentStageprod806F1F27": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    },
    "DeploymentId": {
     "Ref": "ApiGatewayApiDeployment0C47D32C1faa29dbf1da95e78e448701f2a16e6e"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "ApiGatewayApiAccountC25230A9"
   ],
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/DeploymentStage.prod/Resource"
   }
  },
  "ApiGatewayApilist506D78CA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiGatewayApi487126F0",
      "RootResourceId"
     ]
    },
    "PathPart": "list",
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/list/Resource"
   }
  },
  "ApiGatewayApilistGETApiPermissionSamCdkStackApiGatewayApi1031DE18GETlistC163CDA1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListLambda6A0688A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi487126F0"
       },
       "/",
       {
        "Ref": "ApiGatewayApiDeploymentStageprod806F1F27"
       },
       "/GET/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/list/GET/ApiPermission.SamCdkStackApiGatewayApi1031DE18.GET..list"
   }
  },
  "ApiGatewayApilistGETApiPermissionTestSamCdkStackApiGatewayApi1031DE18GETlist78C8F901": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListLambda6A0688A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi487126F0"
       },
       "/test-invoke-stage/GET/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/list/GET/ApiPermission.Test.SamCdkStackApiGatewayApi1031DE18.GET..list"
   }
  },
  "ApiGatewayApilistGETC9298EF7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "ApiGatewayApilist506D78CA"
    },
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListLambda6A0688A4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/list/GET/Resource"
   }
  },
  "ApiGatewayApiputCA05796D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiGatewayApi487126F0",
      "RootResourceId"
     ]
    },
    "PathPart": "put",
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/put/Resource"
   }
  },
  "ApiGatewayApiputPOSTApiPermissionSamCdkStackApiGatewayApi1031DE18POSTputA785731D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutLambdaF8B9F63D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi487126F0"
       },
       "/",
       {
        "Ref": "ApiGatewayApiDeploymentStageprod806F1F27"
       },
       "/POST/put"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/put/POST/ApiPermission.SamCdkStackApiGatewayApi1031DE18.POST..put"
   }
  },
  "ApiGatewayApiputPOSTApiPermissionTestSamCdkStackApiGatewayApi1031DE18POSTput0175EB6B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutLambdaF8B9F63D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi487126F0"
       },
       "/test-invoke-stage/POST/put"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/put/POST/ApiPermission.Test.SamCdkStackApiGatewayApi1031DE18.POST..put"
   }
  },
  "ApiGatewayApiputPOSTEF04C65C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "ApiGatewayApiputCA05796D"
    },
    "RestApiId": {
     "Ref": "ApiGatewayApi487126F0"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PutLambdaF8B9F63D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/ApiGatewayApi/Default/put/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTU/DMAyGf8vuaRBMAu3YDXFDVANxndzEDNN8VHWiqar630nSfcDJj1/br508yKeNvF/BiSulu8pQK6f3AKoTSTpMenRgvU7iB7QGxe7LFZiFAdtqkNNLdCqQd7l05U8c+KxdsDYEnIUrNDhY4lycBYGV094vG0psvCE1lr5Cs+D1AZgxsKxzSLncRtVh2AKjgJ6OEPAEYzJCDnVPxeuGtVI+uiCesTd+tJgwqX+y9O5jOWCBNOrjoLDYX5Kz58KvGL69ztJC83zrKzdmI3LH3PEWQx/Dv/HEO+80hfIFzZgs3N1abuTj6oeJqiFdSxblfom/3YJHH6sBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "SamCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ApiGatewayApiEndpoint4F185358": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiGatewayApi487126F0"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiGatewayApiDeploymentStageprod806F1F27"
      },
      "/"
     ]
    ]
   }
  },
  "APIGatewayDeploymentURL": {
   "Description": "API Gateway deployment URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiGatewayApi487126F0"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".amazonaws.com/prod/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}